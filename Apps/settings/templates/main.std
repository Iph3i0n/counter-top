<s:meta name="settings-main"> </s:meta>

<script>
  let mode = "user";

  const available_modes = (await Invoke("is_admin"))
    ? [
        { id: "user", name: "User" },
        { id: "apps", name: "Apps" },
        { id: "app_store", name: "App Store" },
      ]
    : [{ id: "user", name: "User" }];

  function select_mode(selection) {
    return () => {
      mode = selection.id;
    };
  }
</script>

<style>
  :host {
    display: grid;
    grid-template-columns: 16rem auto;
    height: 100vh;
  }

  .area-button {
    cursor: pointer;
    padding: 0.5rem 1rem;
    transition: background-color 200ms;
    position: relative;
  }

  .area-button.active {
    background-color: rgba(0, 0, 0, 0.1);
  }

  .area-button:hover {
    background-color: rgba(0, 0, 0, 0.1);
  }

  .main-content {
    max-height: 100%;
    overflow-y: auto;
  }
</style>

<d-panel colour="surface" style="height: 100%">
  <s:for subject=":available_modes" key="mode_item">
    <div
      class=":'area-button' + (mode === mode_item.id ? ' active' : '')"
      on:click="select_mode(mode_item)"
    >
      <t-paragraph> <s:text use=":mode_item.name" /></t-paragraph>
    </div>
  </s:for>
</d-panel>

<div class="main-content">
  <s:if check=":mode === 'user'">
    <settings-user></settings-user>
  </s:if>

  <s:if check=":mode === 'apps'">
    <settings-apps></settings-apps>
  </s:if>

  <s:if check=":mode === 'app_store'">
    <settings-appstore></settings-appstore>
  </s:if>
</div>
