<s:meta name="os-authenticate"></s:meta>

<script>
  import { StartConnection, TryStartConnection } from "../utils/cookie.ts";
  import SpawnSocket from "../../Interfacing/SocketSpawner.ts";
  import OpenWindowEvent from "../utils/open_window_event.ts";

  let mode = "login";

  const existing = await TryStartConnection();
  if (existing)
    self.dispatchEvent(new CustomEvent("authenticated", { detail: existing }));

  function on_submit_register(e) {
    const data = e.FormData;

    fetch("/api/auth/register", {
      method: "POST",
      body: JSON.stringify({
        email: data.email,
        password: data.password,
      }),
      headers: {
        "content-type": "application/json",
      },
    })
      .then((r) => r.json())
      .then((j) => StartConnection(j.token))
      .then((c) =>
        self.dispatchEvent(new CustomEvent("authenticated", { detail: c }))
      )
      .catch((err) => console.log("Failed to start connection"));
  }

  function on_submit_login(e) {
    const data = e.FormData;

    fetch(
      `/api/auth/token?email=${encodeURIComponent(
        data.email
      )}&password=${encodeURIComponent(data.password)}`
    )
      .then((r) => r.json())
      .then((j) => StartConnection(j.token))
      .then((c) =>
        self.dispatchEvent(new CustomEvent("authenticated", { detail: c }))
      )
      .catch((err) => console.log("Failed to start connection"));
  }

  function on_mode_switch() {
    if (mode === "login") mode = "register";
    else mode = "login";
  }
</script>

<style>
  :host {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    padding: 10rem;
  }

  l-row,
  t-paragraph {
    text-align: center;
  }
</style>

<s:if check=":mode === 'login'">
  <l-row>
    <l-col xs="12">
      <t-heading level="h1">Login</t-heading>
      <t-paragraph>Don't have an account?</t-paragraph>
    </l-col>
    <l-col xs="12">
      <f-button type="button" on:click="on_mode_switch">Register</f-button>
    </l-col>
  </l-row>
  <f-form submit="event-only" on:Submitted="on_submit_login">
    <l-row>
      <l-col xs="12">
        <f-input type="email" name="email">Email</f-input>
      </l-col>
      <l-col xs="12">
        <f-input type="text" name="password" sensitive>Password</f-input>
      </l-col>
      <l-col xs="12">
        <f-button type="submit">Login</f-button>
      </l-col>
    </l-row>
  </f-form>
</s:if>

<s:if check=":mode === 'register'">
  <l-row>
    <l-col xs="12">
      <t-heading level="h1">Register</t-heading>
      <t-paragraph>Already have an account?</t-paragraph>
    </l-col>
    <l-col xs="12">
      <f-button type="button" on:click="on_mode_switch">Login</f-button>
    </l-col>
  </l-row>
  <f-form submit="event-only" on:Submitted="on_submit_register">
    <l-row>
      <l-col xs="12">
        <f-input type="email" name="email">Email</f-input>
      </l-col>
      <l-col xs="12">
        <f-input type="text" name="password" sensitive>Password</f-input>
      </l-col>
      <l-col xs="12">
        <f-button type="submit">Register</f-button>
      </l-col>
    </l-row>
  </f-form>
</s:if>
