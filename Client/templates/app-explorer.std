<s:meta name="os-app-explorer">
  <attr name="connection" type="any"></attr>
  <attr name="open" type="string"></attr>
</s:meta>

<script>
  let apps = await self.connection.Send("execute", "list_apps");
  let running = [];

  function LaunchApp(app) {
    return () => {
      self.dispatchEvent(
        new CustomEvent("app_launched", { detail: [app.id, app.name] })
      );

      app.running = true;
    };
  }

  function close_explorer() {
    self.dispatchEvent(new CustomEvent("explorer_closed"));
  }

  function CloseApp(app) {
    /** @param {Event} e */
    return (e) => {
      e.preventDefault();
      e.stopPropagation();
      self.dispatchEvent(
        new CustomEvent("app_closed", { detail: [app.id, app.name] })
      );

      app.running = false;
    };
  }

  $props: {
    if (event.Key === "open") {
      apps = await self.connection.Send("execute", "list_apps");
      self.should_render();
    }
  }
</script>

<style>
  @insert ../styles/explorer-grid.pss;

  @if self.open === "app_explorer" {
    :host {
      opacity: 1;
      pointer-events: all;
    }
  }
</style>

<div class="close-button">
  <f-button colour="surface" on:click="close_explorer">
    <t-icon name="close" colour="surface" text size="h4"></t-icon>
  </f-button>
</div>

<div class="content">
  <l-row>
    <s:for subject=":apps" key="app">
      <l-col xs="12" sm="6" md="4" lg="3" xl="2">
        <f-button colour="surface" on:click="LaunchApp(app)">
          <img src=":`/apps/${app.id}/public/icon.svg`" />
          <s:text use=":app.name" />
        </f-button>
        <s:if check=":app.running">
          <f-button type="button" colour="warning" on:click="CloseApp(app)">
            <t-icon name="close" colour="warning" text></t-icon>
          </f-button>
        </s:if>
      </l-col>
    </s:for>
  </l-row>
</div>
